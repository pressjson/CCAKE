40c40
<         double ecc(LinkList<D> &linklist, double  & psi,double & rout , int m,int n);
---
>         double ecc(LinkList<D> &linklist, double  & psi,double & rout , double & Etot, int m,int n);
42d41
<         void bsqsveprofile(LinkList<D> &linklist);
51d49
<         void bsqsvFOprint(LinkList<D> &linklist);
389c387
<     		EPN << linklist._p[i].r   << " " << linklist._p[i].EOS.e() << " " << linklist._p[i].EOS.T()*197.3 <<  endl;	
---
>     		EPN << linklist._p[i].r   << " " << linklist._p[i].EOS.e() <<  endl;	
474,476c472
< 		//EPN << linklist._p[i].EOS.e()<< " " << linklist._p[i].EOS.e() << " " << linklist._p[i].EOS.T()*197.3 << " " << linklist._p[i].v  << " " << linklist._p[i].sigmaweight   <<endl;	
< 
<                 EPN << linklist._p[i].r   << " " << linklist._p[i].EOS.e() << " " << linklist._p[i].EOS.p() << " " << linklist._p[i].EOS.T()*197.3 << " " << linklist._p[i].stauRelax << " " <<  linklist._p[i].sigmaweight << " " << linklist._p[i].bigtheta   << " " <<  sqrt(linklist._p[i].shv.x[0][0]*linklist._p[i].shv.x[0][0]-2*linklist._p[i].shv.x[0][1]*linklist._p[i].shv.x[0][1] -2*linklist._p[i].shv.x[0][2]*linklist._p[i].shv.x[0][2]    + linklist._p[i].shv.x[1][1]*linklist._p[i].shv.x[1][1]+ linklist._p[i].shv.x[2][2]*linklist._p[i].shv.x[2][2] +2* linklist._p[i].shv.x[1][2]*linklist._p[i].shv.x[1][2]+pow(linklist.t,4)*linklist._p[i].shv33*linklist._p[i].shv33) << " " << linklist._p[i].stauRelax/linklist.t * linklist._p[i].bigtheta << " " << linklist._p[i].u.x[0]/linklist._p[i].gamma << " " << linklist._p[i].u.x[1]/linklist._p[i].gamma << " " << linklist._p[i].gamma <<endl;
---
> 		EPN << linklist._p[i].r   << " " << linklist._p[i].EOS.e() << " " << linklist._p[i].EOS.T()*0.1973 << " " << linklist._p[i].v    <<endl;	
492,542d487
< template <int D>
< void Output<D>::bsqsveprofile(LinkList<D> &linklist)
< {
< 	ofstream EPN;
< 	
<    	countEP+=1;
<    	string epin ("bsqsveprofile");
<    	string dat (".dat");
<    	string sCEP;
<    	sCEP=convertInt(countEP);
<    	string epname;
<    	
<    	if (linklist.average==1)
<    	 {
<    	 	epname=cfolder+"average_eprof"+ sCEP + ".dat";
<    	 }   
<    	else if (linklist.fcount==0&&linklist.average!=1)
<    	{
<    	 	epname=ofolder+epin+sCEP+dat;
<    	 }
<    	 else
<    	 {
<    	 	string under ("_ev");
<    	 	string even;
<    	 	even=convertInt(linklist.fnum);
<    	 	epname=cfolder+epin+sCEP+under+even+dat;
<    	 }
<    	
<    	//cout << epname << endl;
<   	EPN.open(epname.c_str());
<   	if (!EPN.is_open())
< 	{
< 		
< 		cout << "Error: cannot open eprofile" << sCEP <<".dat file!" << endl;
< 		exit(1);
< 	}
< 	else 
< 	{
< 		EPN << linklist.t << endl;
< 		
< 		
< 		
< 		for (int i=0;i<linklist.n();i++)
< 		{	
< 
<                 EPN << linklist._p[i].r   << " " << linklist._p[i].EOS.e() << " " << linklist._p[i].EOS.p() << " " << linklist._p[i].EOS.T()*197.3 << " " << linklist._p[i].stauRelax << " " <<  linklist._p[i].sigmaweight << " " << linklist._p[i].bigtheta   << " " <<  sqrt(linklist._p[i].shv.x[0][0]*linklist._p[i].shv.x[0][0]-2*linklist._p[i].shv.x[0][1]*linklist._p[i].shv.x[0][1] -2*linklist._p[i].shv.x[0][2]*linklist._p[i].shv.x[0][2]    + linklist._p[i].shv.x[1][1]*linklist._p[i].shv.x[1][1]+ linklist._p[i].shv.x[2][2]*linklist._p[i].shv.x[2][2] +2* linklist._p[i].shv.x[1][2]*linklist._p[i].shv.x[1][2]+pow(linklist.t,4)*linklist._p[i].shv33*linklist._p[i].shv33) << " " << linklist._p[i].stauRelax/linklist.t * linklist._p[i].bigtheta << " " << linklist._p[i].u.x[0]/linklist._p[i].gamma << " " << linklist._p[i].u.x[1]/linklist._p[i].gamma << " " << linklist._p[i].gamma <<endl;
<    	
< 		}
< 	}
< 	
< 
544,546d488
<   	EPN.close();
<    	
< }
569c511
<   
---
>   cout << epname << endl;  
578,581c520,524
<   double psi,rout;
<   double e22=ecc(linklist,psi,rout,2,2);
<   EPN << convertInt(linklist.fnum) << " " <<  e22 << " " << psi << " "  ;
<   double e33=ecc(linklist,psi,rout,3,3);
---
>   double psi,rout,etot;
>   double e22=ecc(linklist,psi,rout,etot,2,2);
>   EPN << convertInt(linklist.fnum) << " " << etot << " " ;
>   EPN << e22 << " " << psi << " "  ;
>   double e33=ecc(linklist,psi,rout,etot,3,3);
583c526
<   double e44=ecc(linklist,psi,rout,4,4);
---
>   double e44=ecc(linklist,psi,rout,etot,4,4);
585c528
<   double e55=ecc(linklist,psi,rout,5,5);
---
>   double e55=ecc(linklist,psi,rout,etot,5,5);
587c530
<   double e66=ecc(linklist,psi,rout,6,6);
---
>   double e66=ecc(linklist,psi,rout,etot,6,6);
596c539
< double Output<D>::ecc(LinkList<D> &linklist, double  & psi,double & rout , int m,int n){
---
> double Output<D>::ecc(LinkList<D> &linklist, double  & psi,double & rout , double & Etot, int m,int n){
612a556,557
>   Etot=etot/max;
>   
750a696,718
> //template <int D>
> //void Output<D>::SCprint(LinkList<D> &linklist)
> //{ 	
> //	
> //  	SC.open(Scons.c_str(), ios::out | ios::app );
> //  	for (int i=0;i< linklist.cf;i++)
> //  	{
> //	
> //  	SC <<  linklist._p[linklist.list[i]].saves << " " << linklist.sFO*linklist.swsub[i] << endl;
> //	}
> //  	SC.close();
> //  	
> //  	
> //  	if (SC.is_open())
> //  	{
> //  		cout << "error: still open" << endl;
> // 		exit(1);
> //  	}
> //	
> //  	delete [] linklist.swsub;
> //  	
> //  	
> //}
754,784d721
< { 	
< 
<   	FO.open(FOname.c_str(), ios::out | ios::app );
<   	for (int i=0;i< linklist.cf;i++)
<   	{
<   	FO <<  linklist.divTtemp[i] << " " << linklist.divT[i] << " " << linklist.gsub[i] << " " << linklist.uout[i] << " " << linklist.swsub[i] << " " <<  linklist.bulksub[i] << " "  <<  linklist.shearsub[i].x[0][0] << " "  <<  linklist.shearsub[i].x[1][1] << " "  <<  linklist.shearsub[i].x[2][2] <<" " <<linklist.shear33sub[i] << " "  <<  linklist.shearsub[i].x[1][2] <<  " "  <<  linklist.tlist[i] <<  " " << linklist.rsub[i] <<  " " << linklist.sFO[i] <<   " " << linklist.Tfluc[i] <<endl; // removed entropy, added in tau
< 	}
<   	FO.close();
<   	
<   	delete [] linklist.divTtemp;
<   	delete [] linklist.divT;
<   	delete [] linklist.gsub;
<   	delete [] linklist.uout;
<   	delete [] linklist.swsub;
<   	delete [] linklist.bulksub;
<   	delete [] linklist.shearsub;
<   	delete [] linklist.rsub;
<   	delete [] linklist.tlist;
<   	delete [] linklist.shear33sub;
<   	
<   	if (FO.is_open())
<   	{
<   		cout << "error: still open" << endl;
<  		exit(1);
<   	}
<   	
<   	
< }
< 
< template <int D>
< void Output<D>::bsqsvFOprint(LinkList<D> &linklist)
