382c382
< 	if ((factor*y[2])>0.001){
---
> 	if ((factor*y[2])>0.05){
431,535d430
< 
< }
< 
< //iccing
< void readICs_iccing(string &firstry,  int &_Ntable3,Particle<2> *&_p,double factor,double const& sfcheck, int & numpart, eos EOS)
< {
< 
<   string filename;
<   filename = ifolder+firstry;
<   //nameenter:
<   ifstream input(filename.c_str());
< 	if (!input.is_open())
<  	{
<  	cout << "Can't open " << filename << endl;
<  	exit(1);
<  	}
< 
< 	string line;
< 	vector<double> xsub,ysub,esub,rBsub,rSsub,rQsub;
< 
< 	getline(input,line);
< 	std::vector<std::string> gx = split(line, ' ');
< 
< 	double stepx,stepy;
< 	stringstream s;
< 	s << gx[1];
< 	s >> stepx;
< 
< 
< 	stringstream s1;
< 	s1 << gx[2];
< 	s1 >> stepy;
< 
< 	cout << "dx=dy=" << stepx << " " << stepy << endl;
< 
< 
< 	while (getline(input,line)) {
< 	std::vector<double> y (3,0) ;
< 
< 	std::vector<std::string> x = split(line, ' ');
< 
< 
< 	for(int j=0;j<6;j++)
< 	{
< 	stringstream ss;
< 	ss << x[j];
< 	ss >> y[j];
< 	}
< 
< 	//if ((factor*y[2])>0.01){
< 		xsub.push_back(y[0]);
< 		ysub.push_back(y[1]);
< 		esub.push_back(y[2]);
< 		rBsub.push_back(y[3]);
< 		rSsub.push_back(y[4]);
< 		rQsub.push_back(y[5]);
< 	//}
< 
< 	}
< 	input.close();
< 
< 
<     _Ntable3=xsub.size();
<     _p= new Particle<2>[_Ntable3];
< 
<     cout << "After e-cutoff=" << _Ntable3 << endl;
< 
< 
<     int kk=_Ntable3;
<     numpart=0;
< 
< 
< 
<     for(int j=0;j<_Ntable3;j++){
<       _p[j].r.x[0]=xsub[j];
<       _p[j].r.x[1]=ysub[j];
<       // _p[j].e_sub=EOS.e_out(factor*esub[j]);
<       _p[j].s_an=factor*esub[j];
<       _p[j].u.x[0]=0;
<       _p[j].u.x[1]=0;
<       _p[j].eta_sigma  = 1;
<       _p[j].sigmaweight=stepx*stepy;
<       _p[j].Bulk = 0;
< 			_p[j].rhoB=rBsub[j];
< 			_p[j].rhoS=rSsub[j];
< 			_p[j].rhoQ=rQsub[j];
< 
< 
< 
<       if (_p[j].s_an>sfcheck)
< 	{
< 	  _p[j].Freeze=0;
< 	}
<       else
< 	{
< 	  _p[j].Freeze=4;
< 	  --kk;
< 	  ++numpart;
< 	}
<     }
< 
<     cout << "After freezeout=" << _Ntable3-numpart << endl;
< 
< 
< 
539,648d433
< //iccing
< void readICs_iccing(string &firstry,  int &_Ntable3,Particle<3> *&_p,double factor,double const& sfcheck, int & numpart, eos EOS)
< {
< 
< // added this function to get compilation!
< if (true){std::cerr << "Fix this! " <<__FILE__ << ":" << __LINE__ << std::endl;  exit(8);}
< 
< 
<   string filename;
<   filename = ifolder+firstry;
<   //nameenter:
<   ifstream input(filename.c_str());
<         if (!input.is_open())
<         {
<         cout << "Can't open " << filename << endl;
<         exit(1);
<         }
< 
<         string line;
<         vector<double> xsub,ysub,esub,rBsub,rSsub,rQsub;
< 
<         getline(input,line);
<         std::vector<std::string> gx = split(line, ' ');
< 
<         double stepx,stepy;
<         stringstream s;
<         s << gx[1];
<         s >> stepx;
< 
< 
<         stringstream s1;
<         s1 << gx[2];
<         s1 >> stepy;
< 
<         cout << "dx=dy=" << stepx << " " << stepy << endl;
< 
< 
<         while (getline(input,line)) {
<         std::vector<double> y (3,0) ;
< 
<         std::vector<std::string> x = split(line, ' ');
< 
< 
<         for(int j=0;j<6;j++)
<         {
<         stringstream ss;
<         ss << x[j];
<         ss >> y[j];
<         }
< 
<         //if ((factor*y[2])>0.01){
<                 xsub.push_back(y[0]);
<                 ysub.push_back(y[1]);
<                 esub.push_back(y[2]);
<                 rBsub.push_back(y[3]);
<                 rSsub.push_back(y[4]);
<                 rQsub.push_back(y[5]);
<         //}
< 
<         }
<         input.close();
< 
< 
<     _Ntable3=xsub.size();
<     _p= new Particle<3>[_Ntable3];
< 
<     cout << "After e-cutoff=" << _Ntable3 << endl;
< 
< 
<     int kk=_Ntable3;
<     numpart=0;
< 
< 
< 
<     for(int j=0;j<_Ntable3;j++){
<       _p[j].r.x[0]=xsub[j];
<       _p[j].r.x[1]=ysub[j];
<       // _p[j].e_sub=EOS.e_out(factor*esub[j]);
<       _p[j].s_an=factor*esub[j];
<       _p[j].u.x[0]=0;
<       _p[j].u.x[1]=0;
<       _p[j].eta_sigma  = 1;
<       _p[j].sigmaweight=stepx*stepy;
<       _p[j].Bulk = 0;
<                         _p[j].rhoB=rBsub[j];
<                         _p[j].rhoS=rSsub[j];
<                         _p[j].rhoQ=rQsub[j];
< 
< 
< 
<       if (_p[j].s_an>sfcheck)
<         {
<           _p[j].Freeze=0;
<         }
<       else
<         {
<           _p[j].Freeze=4;
<           --kk;
<           ++numpart;
<         }
<     }
< 
<     cout << "After freezeout=" << _Ntable3-numpart << endl;
< 
< 
< 
< }
< 
< 
< 
657c442
<         ifstream input(filename.c_str());
---
>         FILE *  myfile = fopen (filename.c_str(),"r");	
659a445,447
>         _Ntable3=55000;
>         double *xsub,*ysub,*esub;
>   	if ((!firstry.empty())&&(myfile!= NULL)){
662,666c450
<   	if (!input.is_open())
<  	{
<  	cout << "Can't open " << filename << endl;
<  	exit(1);
<  	}
---
>            int i=0;
670,671c454,460
< 	string line;
< 	vector<double> xsub,ysub,esub;
---
>            xsub=new double[_Ntable3];
>            ysub=new double[_Ntable3];
>            esub=new double[_Ntable3];
> //           vxsub=new double[_Ntable3];
> //           vysub=new double[_Ntable3];
> //           vzsub=new double[_Ntable3];
> 
675,677c464
< 	if (hcor==1) {
< 		getline(input,line);
< 		cout << "here" << endl;
---
> 	if (hcor==1) {fscanf(myfile,"%*f  \n");
678a466,468
> 		//while (fscanf(myfile,"%lf    %lf  %lf %*f %*f      \n",&xsub[i],&ysub[i],&esub[i])!=EOF){
> 		while (fscanf(myfile,"%lf    %lf  %lf     \n",&xsub[i],&ysub[i],&esub[i])!=EOF){
> 		   if (factor*esub[i]>0.01) ++i; 
680,681c470
< 	else {
< 		gd2=0.08*0.08;
---
> 	
682a472
> 	else {gd2=0.08*0.08;
683a474,477
> 	 	while (fscanf(myfile,"%lf    %lf  %lf %*f    %*f  %*f  \n",&xsub[i],&ysub[i],&esub[i])!=EOF){
>                   esub[i]/=0.1973;
>                   if (factor*esub[i]>0.01) ++i; 
>                 }
685,686c479
< 	while (getline(input,line)) {
< 	std::vector<double> y (3,0) ;
---
> 	}
688d480
< 	std::vector<std::string> x = split(line, ' ');
691,696d482
< 	for(int j=0;j<3;j++)
< 	{
< 	stringstream ss;
< 	ss << x[j];
< 	ss >> y[j];
< 	}
698,705d483
< 	if (y[2]>0.01){
< 		xsub.push_back(y[0]);
< 		ysub.push_back(y[1]);
< 		esub.push_back(y[2]);
< 	}
< 
< 	}
< 	input.close();
708c486
<     _Ntable3=xsub.size();
---
>          _Ntable3=i;
713d490
< 
717,718d493
< 
< 
722c497
<       _p[j].e_sub=esub[j];
---
>         	   _p[j].e_sub=factor*esub[j];
742d516
< 
744a519,529
>           delete [] xsub;
>           delete [] ysub;
>           delete [] esub;
>         
>   	  fclose(myfile);
>   	}
>   	else {
>   		cout << "Error: " << firstry.c_str() << " does not exist.  Please enter new file name\n";
> 		
> 		exit(1);
>   	}	
