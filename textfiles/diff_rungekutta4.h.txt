1c1
< #ifndef ENTERIC_H_
---
> #ifndef ENTERIC_H_ 
12c12
< template <int D>
---
> template <int D> 
20c20
< 
---
> 	
30,31c30,31
< 
< 
---
> 	
> 	
35c35
< 
---
> 		
37,38c37,38
< 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;			
> 		
45,46c45,46
< 
< 
---
> 	
> 		
49c49
< 
---
> 		
52c52
< 
---
> 		
54c54
< 
---
> 			
58,59c58,59
< 
< 
---
> 		
> 	
70,72c70,72
< 
< 
< 
---
> 		
> 		
> 	
77c77
< 
---
> 			
80c80
< 		}
---
> 		}	
83,84c83,84
< 
< 
---
> 		
> 		
86,87c86,87
< 
< 
---
> 		
> 	
89c89
< 
---
> 	
98c98
< 
---
> 	
101c101
< template <int D>
---
> template <int D> 
109c109
< 
---
> 	
123c123
< 
---
> 			
130,131c130,131
< 
< 
---
> 		
> 	
142c142
< 
---
> 	
147c147
< 
---
> 			
150c150
< 
---
> 			
153c153
< 		}
---
> 		}		
156c156
< 
---
> 		
159c159
< 
---
> 		
161,162c161,162
< 
< 
---
> 		
> 	
164c164
< 	else
---
> 	else 
172c172
< 
---
> 	
177c177
< 
---
> 			
180c180
< 
---
> 			
183c183
< 		}
---
> 		}		
186c186
< 
---
> 		
189,191c189,191
< 
< 
< 
---
> 		
> 		
> 	
193c193
< 
---
> 	
196c196
< 
---
> 	
200c200
< template <int D>
---
> template <int D> 
208,209c208,209
< 
< 
---
> 	
> 	
217c217
< 
---
> 	
222c222
< 
---
> 		
224c224
< 
---
> 		
228c228
< 
---
> 	
233c233
< 
---
> 		
235c235
< 
---
> 			
239c239
< 
---
> 	
244c244
< template <int D>
---
> template <int D> 
256c256
< 
---
> 	
265c265
< 
---
> 	
271c271
< 
---
> 		
274c274
< 
---
> 		
277c277
< 
---
> 		
281c281
< 
---
> 	
287c287
< 
---
> 		
290c290
< 
---
> 		
292c292
< //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es2;
---
> //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es2;		
295c295
< 
---
> 	
301c301
< 
---
> 		
304c304
< 
---
> 		
306c306
< //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es3;
---
> //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es3;		
310c310
< 
---
> 	
315c315
< 
---
> 		
317,319c317,319
< 
< //		linklist._p[i].es4=dx*linklist._p[i].detasigma_dt;
< 
---
> 		
> //		linklist._p[i].es4=dx*linklist._p[i].detasigma_dt;		
> 		
322c322
< 
---
> 		
324,327c324,327
< 
< 
< 
< //		linklist._p[i].eta_sigma=es0[i]+(1./6.0)*linklist._p[i].es1+(1./3.0)*linklist._p[i].es2+(1./3.0)*linklist._p[i].es3+(1./6.0)*linklist._p[i].es4;
---
> 		
> 		
> 		
> //		linklist._p[i].eta_sigma=es0[i]+(1./6.0)*linklist._p[i].es1+(1./3.0)*linklist._p[i].es2+(1./3.0)*linklist._p[i].es3+(1./6.0)*linklist._p[i].es4;		
329c329
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
331c331
< 
---
> 	
334c334
< 
---
> 	
339c339
< template <int D>
---
> template <int D> 
350c350
< 
---
> 	
352c352
< 
---
> 	
363c363
< 
---
> 	
367c367
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
371c371
< 
---
> 		
380c380
< 
---
> 	
384c384
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
388c388
< 
---
> 			
392,393c392,393
< 
< 
---
> 		
> 	
406c406
< 
---
> 	
413c413
< 
---
> 			
418c418
< 		}
---
> 		}		
421c421
< 
---
> 		
423,424c423,424
< 
< 
---
> 		
> 	
436c436
< template <int D>
---
> template <int D> 
448c448
< 
---
> 	
458c458
< 
---
> 	
462c462
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
472c472
< 
---
> 	
476c476
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
483c483
< 
---
> 			
487c487
< 
---
> 	
494c494
< template <int D>
---
> template <int D> 
506c506
< 
---
> 	
516c516
< 
---
> 	
518c518
< 
---
> 	
520c520
< 
---
> 	
524c524
< 
---
> 		
526,527c526,527
< 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;		
> 		
530c530
< 
---
> 		
533,534c533,534
< 
< 
---
> 		
> 		
538,539c538,539
< 
< 
---
> 	
> 	
545c545
< 
---
> 		
548c548
< 
---
> 		
551c551
< 
---
> 		
554c554
< 
---
> 			
557c557
< 
---
> 	
563c563
< 
---
> 		
566c566
< 
---
> 		
569c569
< 
---
> 		
572c572
< 
---
> 			
576c576
< 
---
> 	
581,582c581,582
< 
< 		linklist._p[i].r4=dx*linklist._p[i].v;
---
> 		
> 		linklist._p[i].r4=dx*linklist._p[i].v;		
585c585
< 
---
> 		
587,589c587,589
< 
< 
< 
---
> 		
> 	
> 		
592c592
< 
---
> 		
594,595c594,595
< 
< 
---
> 		
> 		
597c597
< 
---
> 		
599,600c599,600
< 
< 
---
> 		
> 		
602c602
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
604c604
< 
---
> 	
613c613
< template <int D>
---
> template <int D> 
626c626
< 
---
> 	
628c628
< 
---
> 	
640c640
< 
---
> 	
644c644
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
649c649
< 
---
> 		
659c659
< 
---
> 	
663c663
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
668c668
< 
---
> 			
672,673c672,673
< 
< 
---
> 		
> 	
687c687
< 
---
> 	
695c695
< 
---
> 			
701c701
< 		}
---
> 		}		
704c704
< 
---
> 		
706,707c706,707
< 
< 
---
> 		
> 	
720c720
< template <int D>
---
> template <int D> 
734,737c734,737
< 
< 
< 
< 
---
> 	
> 	
> 	
> 	
740,742c740,742
< 
< 
< 
---
> 	
> 	
> 	
750c750
< 
---
> 	
752,753c752,753
< 
< 
---
> 	
> 	
757c757
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
763c763
< 
---
> 		
765,766c765,766
< 
< 
---
> 		
> 		
771c771
< 
---
> 	
775c775
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
786c786
< 
---
> 	
794c794
< template <int D>
---
> template <int D> 
808c808
< 
---
> 	
819c819
< 
---
> 	
821c821
< 
---
> 	
823c823
< 
---
> 	
827c827
< 
---
> 		
829,830c829,830
< 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;		
> 		
833c833
< 
---
> 		
836c836
< 
---
> 		
839,840c839,840
< 
< 
---
> 		
> 		
844,845c844,845
< 
< 
---
> 	
> 	
851c851
< 
---
> 		
854c854
< 
---
> 		
857c857
< 
---
> 		
860c860
< 
---
> 		
863c863
< 
---
> 			
866c866
< 
---
> 	
872c872
< 
---
> 		
875c875
< 
---
> 		
878c878
< 
---
> 		
881c881
< 
---
> 		
884c884
< 
---
> 			
888c888
< 
---
> 	
893,894c893,894
< 
< 		linklist._p[i].r4=dx*linklist._p[i].v;
---
> 		
> 		linklist._p[i].r4=dx*linklist._p[i].v;		
897c897
< 
---
> 		
899c899
< 
---
> 		
901,902c901,902
< 
< 
---
> 	
> 		
905c905
< 
---
> 		
907,908c907,908
< 
< 
---
> 		
> 		
910c910
< 
---
> 		
912c912
< 
---
> 		
915c915
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
917,1004c917
< 
< 	delete [] u0;
< 	delete [] r0;
< 	delete [] etasigma0;
< 	delete [] Bulk0;
< 	delete [] shv0;
< }
< 
< template <int D>
< void bsqrungeKutta2(double dx,void (*derivatives)( LinkList<D> &linklist), LinkList<D> &linklist )
< {
< 	// creating arrays of vectors of the derivatives at each step
< 	int N=linklist.n();
< 	Vector<double,D> *u0,*r0;
< 	double *etasigma0,*Bulk0,*rhoB0,*rhoS0,*rhoQ0;
< 	u0=new Vector<double,D> [N];
< 	r0=new Vector<double,D> [N];
< 	etasigma0=new double [N];
< 	Bulk0=new double [N];
< 	rhoB0=new double [N];
< 	rhoS0=new double [N];
< 	rhoQ0=new double [N];
< 
< 	Matrix <double,D,D> *shv0;
< 	shv0=new Matrix <double,D,D> [N];
< 	double E0,t0;
< 
< 
< 
< 
< 	linklist.rk2=1;
< 	t0=linklist.t;
< 
< 
< 
< 	for (int i=0; i<N; ++i) {
< 		u0[i]=linklist._p[i].u;
< 		r0[i]=linklist._p[i].r;
< 		etasigma0[i]=linklist._p[i].eta_sigma;
< 		Bulk0[i]=linklist._p[i].Bulk;
< 		rhoB0[i]=linklist._p[i].rhoB;
< 		rhoS0[i]=linklist._p[i].rhoS;
< 		rhoQ0[i]=linklist._p[i].rhoQ;
< 		mini(shv0[i],linklist._p[i].shv);
< 	}
< 
< 	E0=linklist.Ez;
< 
< 
< 	//	first step
< 	(*derivatives)(linklist);
< 	for (int i=0; i<N; ++i) {
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
< 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;
< 		linklist._p[i].eta_sigma=etasigma0[i]+0.5*dx*linklist._p[i].detasigma_dt;
< 		linklist._p[i].Bulk=Bulk0[i]+0.5*dx*linklist._p[i].dBulk_dt;
< 		linklist._p[i].rhoB=rhoB0[i]+0.5*dx*linklist._p[i].drhoB_dt;
< 		linklist._p[i].rhoS=rhoB0[i]+0.5*dx*linklist._p[i].drhoS_dt;
< 		linklist._p[i].rhoQ=rhoB0[i]+0.5*dx*linklist._p[i].drhoQ_dt;
< 		tmini(linklist._p[i].shv,shv0[i]+0.5*dx*linklist._p[i].dshv_dt);
< 
< 
< 		//if (i==14335) cout <<linklist._p[i].shv << " " << shv0[i]+0.5*dx*linklist._p[i].dshv_dt << endl;
< 
< 
< 		//if (linklist._p[i].eta_sigma<0) linklist._p[i].eta_sigma=0;
< 	}
< 	linklist.Ez=E0+0.5*dx*linklist.dEz;
< 	linklist.t=t0+0.5*dx;
< 
< 	//	second step
< 	(*derivatives)(linklist);
< 	for (int i=0; i<N; ++i) {
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
< 		linklist._p[i].r=r0[i]+dx*linklist._p[i].v;
< 		linklist._p[i].eta_sigma=etasigma0[i]+dx*linklist._p[i].detasigma_dt;
< 		linklist._p[i].Bulk=Bulk0[i]+dx*linklist._p[i].dBulk_dt;
< 		linklist._p[i].rhoB=rhoB0[i]+dx*linklist._p[i].drhoB_dt;
< 		linklist._p[i].rhoS=rhoB0[i]+dx*linklist._p[i].drhoS_dt;
< 		linklist._p[i].rhoQ=rhoB0[i]+dx*linklist._p[i].drhoQ_dt;
< 		tmini(linklist._p[i].shv,shv0[i]+dx*linklist._p[i].dshv_dt);
< 		//if (linklist._p[i].eta_sigma<0) linklist._p[i].eta_sigma=0;
< 
< 		//if (i==14335) cout <<linklist._p[i].eta_sigma << " " << linklist._p[i].u << " " <<  linklist._p[i].Bulk << endl;
< 	}
< 	linklist.Ez=E0+dx*linklist.dEz;
< 	linklist.t=t0+dx;
< 
---
> 	
1009,1011d921
< 	delete [] rhoB0;
< 	delete [] rhoS0;
< 	delete [] rhoQ0;
1c1
< #ifndef ENTERIC_H_
---
> #ifndef ENTERIC_H_ 
12c12
< template <int D>
---
> template <int D> 
20c20
< 
---
> 	
30,31c30,31
< 
< 
---
> 	
> 	
35c35
< 
---
> 		
37,38c37,38
< 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;			
> 		
45,46c45,46
< 
< 
---
> 	
> 		
49c49
< 
---
> 		
52c52
< 
---
> 		
54c54
< 
---
> 			
58,59c58,59
< 
< 
---
> 		
> 	
70,72c70,72
< 
< 
< 
---
> 		
> 		
> 	
77c77
< 
---
> 			
80c80
< 		}
---
> 		}	
83,84c83,84
< 
< 
---
> 		
> 		
86,87c86,87
< 
< 
---
> 		
> 	
89c89
< 
---
> 	
98c98
< 
---
> 	
101c101
< template <int D>
---
> template <int D> 
109c109
< 
---
> 	
123c123
< 
---
> 			
130,131c130,131
< 
< 
---
> 		
> 	
142c142
< 
---
> 	
147c147
< 
---
> 			
150c150
< 
---
> 			
153c153
< 		}
---
> 		}		
156c156
< 
---
> 		
159c159
< 
---
> 		
161,162c161,162
< 
< 
---
> 		
> 	
164c164
< 	else
---
> 	else 
172c172
< 
---
> 	
177c177
< 
---
> 			
180c180
< 
---
> 			
183c183
< 		}
---
> 		}		
186c186
< 
---
> 		
189,191c189,191
< 
< 
< 
---
> 		
> 		
> 	
193c193
< 
---
> 	
196c196
< 
---
> 	
200c200
< template <int D>
---
> template <int D> 
208,209c208,209
< 
< 
---
> 	
> 	
217c217
< 
---
> 	
222c222
< 
---
> 		
224c224
< 
---
> 		
228c228
< 
---
> 	
233c233
< 
---
> 		
235c235
< 
---
> 			
239c239
< 
---
> 	
244c244
< template <int D>
---
> template <int D> 
256c256
< 
---
> 	
265c265
< 
---
> 	
271c271
< 
---
> 		
274c274
< 
---
> 		
277c277
< 
---
> 		
281c281
< 
---
> 	
287c287
< 
---
> 		
290c290
< 
---
> 		
292c292
< //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es2;
---
> //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es2;		
295c295
< 
---
> 	
301c301
< 
---
> 		
304c304
< 
---
> 		
306c306
< //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es3;
---
> //		linklist._p[i].eta_sigma=es0[i]+(1./2.0)*linklist._p[i].es3;		
310c310
< 
---
> 	
315c315
< 
---
> 		
317,319c317,319
< 
< //		linklist._p[i].es4=dx*linklist._p[i].detasigma_dt;
< 
---
> 		
> //		linklist._p[i].es4=dx*linklist._p[i].detasigma_dt;		
> 		
322c322
< 
---
> 		
324,327c324,327
< 
< 
< 
< //		linklist._p[i].eta_sigma=es0[i]+(1./6.0)*linklist._p[i].es1+(1./3.0)*linklist._p[i].es2+(1./3.0)*linklist._p[i].es3+(1./6.0)*linklist._p[i].es4;
---
> 		
> 		
> 		
> //		linklist._p[i].eta_sigma=es0[i]+(1./6.0)*linklist._p[i].es1+(1./3.0)*linklist._p[i].es2+(1./3.0)*linklist._p[i].es3+(1./6.0)*linklist._p[i].es4;		
329c329
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
331c331
< 
---
> 	
334c334
< 
---
> 	
339c339
< template <int D>
---
> template <int D> 
350c350
< 
---
> 	
352c352
< 
---
> 	
363c363
< 
---
> 	
367c367
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
371c371
< 
---
> 		
380c380
< 
---
> 	
384c384
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
388c388
< 
---
> 			
392,393c392,393
< 
< 
---
> 		
> 	
406c406
< 
---
> 	
413c413
< 
---
> 			
418c418
< 		}
---
> 		}		
421c421
< 
---
> 		
423,424c423,424
< 
< 
---
> 		
> 	
436c436
< template <int D>
---
> template <int D> 
448c448
< 
---
> 	
458c458
< 
---
> 	
462c462
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
472c472
< 
---
> 	
476c476
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
483c483
< 
---
> 			
487c487
< 
---
> 	
494c494
< template <int D>
---
> template <int D> 
506c506
< 
---
> 	
516c516
< 
---
> 	
518c518
< 
---
> 	
520c520
< 
---
> 	
524c524
< 
---
> 		
526,527c526,527
< 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;		
> 		
530c530
< 
---
> 		
533,534c533,534
< 
< 
---
> 		
> 		
538,539c538,539
< 
< 
---
> 	
> 	
545c545
< 
---
> 		
548c548
< 
---
> 		
551c551
< 
---
> 		
554c554
< 
---
> 			
557c557
< 
---
> 	
563c563
< 
---
> 		
566c566
< 
---
> 		
569c569
< 
---
> 		
572c572
< 
---
> 			
576c576
< 
---
> 	
581,582c581,582
< 
< 		linklist._p[i].r4=dx*linklist._p[i].v;
---
> 		
> 		linklist._p[i].r4=dx*linklist._p[i].v;		
585c585
< 
---
> 		
587,589c587,589
< 
< 
< 
---
> 		
> 	
> 		
592c592
< 
---
> 		
594,595c594,595
< 
< 
---
> 		
> 		
597c597
< 
---
> 		
599,600c599,600
< 
< 
---
> 		
> 		
602c602
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
604c604
< 
---
> 	
613c613
< template <int D>
---
> template <int D> 
626c626
< 
---
> 	
628c628
< 
---
> 	
640c640
< 
---
> 	
644c644
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
649c649
< 
---
> 		
659c659
< 
---
> 	
663c663
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
668c668
< 
---
> 			
672,673c672,673
< 
< 
---
> 		
> 	
687c687
< 
---
> 	
695c695
< 
---
> 			
701c701
< 		}
---
> 		}		
704c704
< 
---
> 		
706,707c706,707
< 
< 
---
> 		
> 	
720c720
< template <int D>
---
> template <int D> 
734,737c734,737
< 
< 
< 
< 
---
> 	
> 	
> 	
> 	
740,742c740,742
< 
< 
< 
---
> 	
> 	
> 	
750c750
< 
---
> 	
752,753c752,753
< 
< 
---
> 	
> 	
757c757
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;		
763c763
< 
---
> 		
765,766c765,766
< 
< 
---
> 		
> 		
771c771
< 
---
> 	
775c775
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
---
> 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;		
786c786
< 
---
> 	
794c794
< template <int D>
---
> template <int D> 
808c808
< 
---
> 	
819c819
< 
---
> 	
821c821
< 
---
> 	
823c823
< 
---
> 	
827c827
< 
---
> 		
829,830c829,830
< 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;
< 
---
> 		linklist._p[i].r=r0[i]+0.5*linklist._p[i].r1;		
> 		
833c833
< 
---
> 		
836c836
< 
---
> 		
839,840c839,840
< 
< 
---
> 		
> 		
844,845c844,845
< 
< 
---
> 	
> 	
851c851
< 
---
> 		
854c854
< 
---
> 		
857c857
< 
---
> 		
860c860
< 
---
> 		
863c863
< 
---
> 			
866c866
< 
---
> 	
872c872
< 
---
> 		
875c875
< 
---
> 		
878c878
< 
---
> 		
881c881
< 
---
> 		
884c884
< 
---
> 			
888c888
< 
---
> 	
893,894c893,894
< 
< 		linklist._p[i].r4=dx*linklist._p[i].v;
---
> 		
> 		linklist._p[i].r4=dx*linklist._p[i].v;		
897c897
< 
---
> 		
899c899
< 
---
> 		
901,902c901,902
< 
< 
---
> 	
> 		
905c905
< 
---
> 		
907,908c907,908
< 
< 
---
> 		
> 		
910c910
< 
---
> 		
912c912
< 
---
> 		
915c915
< 	E4=dx*linklist.dEz;
---
> 	E4=dx*linklist.dEz;	
917,1004c917
< 
< 	delete [] u0;
< 	delete [] r0;
< 	delete [] etasigma0;
< 	delete [] Bulk0;
< 	delete [] shv0;
< }
< 
< template <int D>
< void bsqrungeKutta2(double dx,void (*derivatives)( LinkList<D> &linklist), LinkList<D> &linklist )
< {
< 	// creating arrays of vectors of the derivatives at each step
< 	int N=linklist.n();
< 	Vector<double,D> *u0,*r0;
< 	double *etasigma0,*Bulk0,*rhoB0,*rhoS0,*rhoQ0;
< 	u0=new Vector<double,D> [N];
< 	r0=new Vector<double,D> [N];
< 	etasigma0=new double [N];
< 	Bulk0=new double [N];
< 	rhoB0=new double [N];
< 	rhoS0=new double [N];
< 	rhoQ0=new double [N];
< 
< 	Matrix <double,D,D> *shv0;
< 	shv0=new Matrix <double,D,D> [N];
< 	double E0,t0;
< 
< 
< 
< 
< 	linklist.rk2=1;
< 	t0=linklist.t;
< 
< 
< 
< 	for (int i=0; i<N; ++i) {
< 		u0[i]=linklist._p[i].u;
< 		r0[i]=linklist._p[i].r;
< 		etasigma0[i]=linklist._p[i].eta_sigma;
< 		Bulk0[i]=linklist._p[i].Bulk;
< 		rhoB0[i]=linklist._p[i].rhoB;
< 		rhoS0[i]=linklist._p[i].rhoS;
< 		rhoQ0[i]=linklist._p[i].rhoQ;
< 		mini(shv0[i],linklist._p[i].shv);
< 	}
< 
< 	E0=linklist.Ez;
< 
< 
< 	//	first step
< 	(*derivatives)(linklist);
< 	for (int i=0; i<N; ++i) {
< 		linklist._p[i].u=u0[i]+0.5*dx*linklist._p[i].du_dt;
< 		linklist._p[i].r=r0[i]+0.5*dx*linklist._p[i].v;
< 		linklist._p[i].eta_sigma=etasigma0[i]+0.5*dx*linklist._p[i].detasigma_dt;
< 		linklist._p[i].Bulk=Bulk0[i]+0.5*dx*linklist._p[i].dBulk_dt;
< 		linklist._p[i].rhoB=rhoB0[i]+0.5*dx*linklist._p[i].drhoB_dt;
< 		linklist._p[i].rhoS=rhoB0[i]+0.5*dx*linklist._p[i].drhoS_dt;
< 		linklist._p[i].rhoQ=rhoB0[i]+0.5*dx*linklist._p[i].drhoQ_dt;
< 		tmini(linklist._p[i].shv,shv0[i]+0.5*dx*linklist._p[i].dshv_dt);
< 
< 
< 		//if (i==14335) cout <<linklist._p[i].shv << " " << shv0[i]+0.5*dx*linklist._p[i].dshv_dt << endl;
< 
< 
< 		//if (linklist._p[i].eta_sigma<0) linklist._p[i].eta_sigma=0;
< 	}
< 	linklist.Ez=E0+0.5*dx*linklist.dEz;
< 	linklist.t=t0+0.5*dx;
< 
< 	//	second step
< 	(*derivatives)(linklist);
< 	for (int i=0; i<N; ++i) {
< 		linklist._p[i].u=u0[i]+	dx*linklist._p[i].du_dt;
< 		linklist._p[i].r=r0[i]+dx*linklist._p[i].v;
< 		linklist._p[i].eta_sigma=etasigma0[i]+dx*linklist._p[i].detasigma_dt;
< 		linklist._p[i].Bulk=Bulk0[i]+dx*linklist._p[i].dBulk_dt;
< 		linklist._p[i].rhoB=rhoB0[i]+dx*linklist._p[i].drhoB_dt;
< 		linklist._p[i].rhoS=rhoB0[i]+dx*linklist._p[i].drhoS_dt;
< 		linklist._p[i].rhoQ=rhoB0[i]+dx*linklist._p[i].drhoQ_dt;
< 		tmini(linklist._p[i].shv,shv0[i]+dx*linklist._p[i].dshv_dt);
< 		//if (linklist._p[i].eta_sigma<0) linklist._p[i].eta_sigma=0;
< 
< 		//if (i==14335) cout <<linklist._p[i].eta_sigma << " " << linklist._p[i].u << " " <<  linklist._p[i].Bulk << endl;
< 	}
< 	linklist.Ez=E0+dx*linklist.dEz;
< 	linklist.t=t0+dx;
< 
---
> 	
1009,1011d921
< 	delete [] rhoB0;
< 	delete [] rhoS0;
< 	delete [] rhoQ0;
